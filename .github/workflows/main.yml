name: Verify Package & Release

on:
 push:
   branches: [ main ]
   tags:
     - v*
 pull_request:
   branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python Version
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run build
        run: |
          source .venv/bin/activate
          make build

      # Only do these on push

      - name: Run Integration Tests
        if: github.event_name == 'push' && startsWith(steps.setup-python.outputs.python-version, '3.8')
        env:
          DRY_RUN_SVC_JSON: ${{ secrets.DRY_RUN_SVC_JSON }}
        run: |
          echo $DRY_RUN_SVC_JSON | base64 --decode >> $HOME/bq_svc.json
          source .venv/bin/activate
          make integration

      - name: Publish package to TestPyPI
        if: github.event_name == 'push' && startsWith(steps.setup-python.outputs.python-version, '3.8')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && startsWith(steps.setup-python.outputs.python-version, '3.8')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
