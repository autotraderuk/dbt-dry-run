[tool.poetry]
name = "dbt-dry-run"
version = "0.3.1"
description = "Dry run dbt projects"
authors = ["Connor Charles <connor.charles@autotrader.co.uk>",
           "Phil hope <philip.hope@autotrader.co.uk>",
           "Angelos Georgiadis <angelos.georgiadis@autotrader.co.uk>",
           "Richard Wilmer <richard.wilmer@autotrader.co.uk>"]
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/autotraderuk/dbt-dry-run"

[tool.poetry.scripts]
dbt-dry-run = "dbt_dry_run.__main__:main"

[tool.poetry.dependencies]
python = "^3.8"
agate = "^1.6"
google-cloud-bigquery = "^2"
pydantic = "^1.9.0"
tenacity = "^8.0.1"
networkx = "^2.6"
pyyaml = "~6"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
pytest = "^7.1.2"
mypy = "^0.931"
types-PyYAML = "^6.0.4"
pytest-cov = "^3.0.0"
twine = "^3.8.0"
types-setuptools = "^57.4.9"
pytest-mock = "^3.7.0"
dbt-bigquery = "^1.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "dbt_dry_run/test"
filterwarnings = [
    "error"
]
pythonpath = [
  "."
]

[tool.coverage.run]
source = ["dbt_dry_run"]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise NotImplemented",
    "if TYPE_CHECKING:",
    "@overload"
]

[tool.isort]
profile = "black"
src_paths = "dbt_dry_run"

[tool.mypy]
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = false
disallow_untyped_defs = true
ignore_missing_imports = true
